"""add field comments

Revision ID: 8d0e30e550a9
Revises: update_timestamp_fields
Create Date: 2025-05-26 11:04:48.485796

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8d0e30e550a9'
down_revision: Union[str, None] = 'update_timestamp_fields'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('access_logs', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('apis', 'id',
               existing_type=sa.INTEGER(),
               comment='API ID',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('apis_id_seq'::regclass)"))
    op.alter_column('apis', 'path',
               existing_type=sa.VARCHAR(length=200),
               comment='API路径',
               existing_nullable=False)
    op.alter_column('apis', 'method',
               existing_type=sa.VARCHAR(length=10),
               comment='请求方法',
               existing_nullable=False)
    op.alter_column('apis', 'summary',
               existing_type=sa.VARCHAR(length=200),
               comment='接口摘要',
               existing_nullable=True)
    op.alter_column('apis', 'tags',
               existing_type=sa.VARCHAR(length=100),
               comment='标签',
               existing_nullable=True)
    op.alter_column('apis', 'description',
               existing_type=sa.VARCHAR(length=500),
               comment='接口描述',
               existing_nullable=True)
    op.alter_column('apis', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               comment='创建时间',
               existing_server_default=sa.text('now()'))
    op.alter_column('apis', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               comment='更新时间',
               existing_server_default=sa.text('now()'))
    op.alter_column('apis', 'is_deleted',
               existing_type=sa.BOOLEAN(),
               comment='是否删除',
               existing_nullable=True)
    op.alter_column('audit_logs', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('audit_logs', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('menus', 'id',
               existing_type=sa.INTEGER(),
               comment='菜单ID',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('menus_id_seq'::regclass)"))
    op.alter_column('menus', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_comment='创建时间',
               existing_server_default=sa.text('now()'))
    op.alter_column('menus', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_comment='更新时间',
               existing_server_default=sa.text('now()'))
    op.alter_column('roles', 'id',
               existing_type=sa.INTEGER(),
               comment='角色ID',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('roles_id_seq'::regclass)"))
    op.alter_column('roles', 'name',
               existing_type=sa.VARCHAR(length=50),
               comment='角色名称',
               existing_nullable=False)
    op.alter_column('roles', 'code',
               existing_type=sa.VARCHAR(length=50),
               comment='角色编码',
               existing_nullable=False)
    op.alter_column('roles', 'description',
               existing_type=sa.VARCHAR(length=200),
               comment='角色描述',
               existing_nullable=True)
    op.alter_column('roles', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               comment='创建时间',
               existing_server_default=sa.text('now()'))
    op.alter_column('roles', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               comment='更新时间',
               existing_server_default=sa.text('now()'))
    op.add_column('tenant_permissions', sa.Column('is_deleted', sa.Boolean(), nullable=True))
    op.alter_column('tenant_permissions', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('tenant_permissions', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('tenants', 'id',
               existing_type=sa.INTEGER(),
               comment='租户ID',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('tenants', 'name',
               existing_type=sa.VARCHAR(length=100),
               comment='租户名称',
               existing_nullable=False)
    op.alter_column('tenants', 'schema_name',
               existing_type=sa.VARCHAR(length=100),
               comment='Schema名称',
               existing_nullable=False)
    op.alter_column('tenants', 'status',
               existing_type=sa.VARCHAR(length=20),
               comment='租户状态',
               existing_nullable=True)
    op.alter_column('tenants', 'description',
               existing_type=sa.VARCHAR(length=500),
               comment='租户描述',
               existing_nullable=True)
    op.alter_column('tenants', 'max_users',
               existing_type=sa.INTEGER(),
               comment='最大用户数',
               existing_nullable=True)
    op.alter_column('tenants', 'expire_date',
               existing_type=sa.DATE(),
               comment='到期时间',
               existing_nullable=True)
    op.alter_column('tenants', 'is_deleted',
               existing_type=sa.BOOLEAN(),
               comment='是否删除',
               existing_nullable=True)
    op.alter_column('tenants', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               comment='创建时间',
               existing_server_default=sa.text('now()'))
    op.alter_column('tenants', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               comment='更新时间',
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'id',
               existing_type=sa.INTEGER(),
               comment='用户ID',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(length=50),
               comment='用户名',
               existing_nullable=False)
    op.alter_column('users', 'alias',
               existing_type=sa.VARCHAR(length=50),
               comment='用户别名',
               existing_nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=100),
               comment='邮箱',
               existing_nullable=True)
    op.alter_column('users', 'phone',
               existing_type=sa.VARCHAR(length=20),
               comment='手机号',
               existing_nullable=True)
    op.alter_column('users', 'password',
               existing_type=sa.VARCHAR(length=100),
               comment='密码',
               existing_nullable=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               comment='是否激活',
               existing_nullable=True)
    op.alter_column('users', 'is_superuser',
               existing_type=sa.BOOLEAN(),
               comment='是否超级管理员',
               existing_nullable=True)
    op.alter_column('users', 'last_login',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='最后登录时间',
               existing_nullable=True)
    op.alter_column('users', 'department',
               existing_type=sa.VARCHAR(length=100),
               comment='部门名称',
               existing_nullable=True)
    op.alter_column('users', 'tenant_id',
               existing_type=sa.INTEGER(),
               comment='租户ID',
               existing_nullable=True)
    op.alter_column('users', 'is_tenant_admin',
               existing_type=sa.BOOLEAN(),
               comment='是否租户管理员',
               existing_nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='创建时间',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='更新时间',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint('users_username_key', 'users', ['username'])
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='更新时间',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='创建时间',
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('users', 'is_tenant_admin',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='是否租户管理员',
               existing_nullable=True)
    op.alter_column('users', 'tenant_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='租户ID',
               existing_nullable=True)
    op.alter_column('users', 'department',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='部门名称',
               existing_nullable=True)
    op.alter_column('users', 'last_login',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='最后登录时间',
               existing_nullable=True)
    op.alter_column('users', 'is_superuser',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='是否超级管理员',
               existing_nullable=True)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='是否激活',
               existing_nullable=True)
    op.alter_column('users', 'password',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='密码',
               existing_nullable=False)
    op.alter_column('users', 'phone',
               existing_type=sa.VARCHAR(length=20),
               comment=None,
               existing_comment='手机号',
               existing_nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='邮箱',
               existing_nullable=True)
    op.alter_column('users', 'alias',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='用户别名',
               existing_nullable=True)
    op.alter_column('users', 'username',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='用户名',
               existing_nullable=False)
    op.alter_column('users', 'id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='用户ID',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('tenants', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               comment=None,
               existing_comment='更新时间',
               existing_server_default=sa.text('now()'))
    op.alter_column('tenants', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               comment=None,
               existing_comment='创建时间',
               existing_server_default=sa.text('now()'))
    op.alter_column('tenants', 'is_deleted',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='是否删除',
               existing_nullable=True)
    op.alter_column('tenants', 'expire_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='到期时间',
               existing_nullable=True)
    op.alter_column('tenants', 'max_users',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='最大用户数',
               existing_nullable=True)
    op.alter_column('tenants', 'description',
               existing_type=sa.VARCHAR(length=500),
               comment=None,
               existing_comment='租户描述',
               existing_nullable=True)
    op.alter_column('tenants', 'status',
               existing_type=sa.VARCHAR(length=20),
               comment=None,
               existing_comment='租户状态',
               existing_nullable=True)
    op.alter_column('tenants', 'schema_name',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='Schema名称',
               existing_nullable=False)
    op.alter_column('tenants', 'name',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='租户名称',
               existing_nullable=False)
    op.alter_column('tenants', 'id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='租户ID',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('tenant_permissions', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('tenant_permissions', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_column('tenant_permissions', 'is_deleted')
    op.alter_column('roles', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               comment=None,
               existing_comment='更新时间',
               existing_server_default=sa.text('now()'))
    op.alter_column('roles', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               comment=None,
               existing_comment='创建时间',
               existing_server_default=sa.text('now()'))
    op.alter_column('roles', 'description',
               existing_type=sa.VARCHAR(length=200),
               comment=None,
               existing_comment='角色描述',
               existing_nullable=True)
    op.alter_column('roles', 'code',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='角色编码',
               existing_nullable=False)
    op.alter_column('roles', 'name',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='角色名称',
               existing_nullable=False)
    op.alter_column('roles', 'id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='角色ID',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('roles_id_seq'::regclass)"))
    op.alter_column('menus', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_comment='更新时间',
               existing_server_default=sa.text('now()'))
    op.alter_column('menus', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_comment='创建时间',
               existing_server_default=sa.text('now()'))
    op.alter_column('menus', 'id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='菜单ID',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('menus_id_seq'::regclass)"))
    op.alter_column('audit_logs', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('audit_logs', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('apis', 'is_deleted',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='是否删除',
               existing_nullable=True)
    op.alter_column('apis', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               comment=None,
               existing_comment='更新时间',
               existing_server_default=sa.text('now()'))
    op.alter_column('apis', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               comment=None,
               existing_comment='创建时间',
               existing_server_default=sa.text('now()'))
    op.alter_column('apis', 'description',
               existing_type=sa.VARCHAR(length=500),
               comment=None,
               existing_comment='接口描述',
               existing_nullable=True)
    op.alter_column('apis', 'tags',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='标签',
               existing_nullable=True)
    op.alter_column('apis', 'summary',
               existing_type=sa.VARCHAR(length=200),
               comment=None,
               existing_comment='接口摘要',
               existing_nullable=True)
    op.alter_column('apis', 'method',
               existing_type=sa.VARCHAR(length=10),
               comment=None,
               existing_comment='请求方法',
               existing_nullable=False)
    op.alter_column('apis', 'path',
               existing_type=sa.VARCHAR(length=200),
               comment=None,
               existing_comment='API路径',
               existing_nullable=False)
    op.alter_column('apis', 'id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='API ID',
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('apis_id_seq'::regclass)"))
    op.alter_column('access_logs', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    # ### end Alembic commands ###
